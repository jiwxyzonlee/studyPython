**시각화
=>데이터의 형태를 파악하거나 보고서를 만들 목적으로 그래프나 지도 등을 출력하는 작업
=>matplotlib(기본 시각화), pandas, seaborn(시각적인 효과가 조금 더 뛰어남), folium(지도, 단계구분도) 등을 주로 이용

1.꺽은선 그래프 - plot
=>날짜나 시간에 따른 변화량 또는 2개의 컬럼을 가지고 데이터의 분포를 알아볼 때 많이 이용

2.하나의 2개의 그래프 그리기
객체 = plt.figure(figsize=(가로크기, 세로크기))
변수1 = 객체.add_subplot(행의개수, 열의개수, 자신의번호)
변수2 = 객체.add_subplot(행의개수, 열의개수, 자신의번호)...

변수1.plot(옵션...)
변수2.plot(옵션...)

3.하나의 영역에 여러개의 그래프 그리기
=>동일한 영역에서 그리는 함수를 여러 번 호출

4.막대 그래프
=>빈도 수를 비교할 때 주로 이용
=>bar(수직), barh(수평) 메소드로 그림
=>하나의 영역에 2개의 막대그래프를 그릴 때는 첫번째 막대 그래프의 width를 조정
width가 1이면 다음 데이터와 붙어서 출력됩니다.
2개면 0.5 이하로 설정해서 그리고 3개면 0.33 이하로 설정하면 됩니다.

5.히스토그램
=>각 구간의 데이터 개수를 파악하고자 할 때 사용하는 그래프
=>hist 메소드를 이용

6.산포도
=>2개 컬럼의 관계를 파악하기 위해서 생성
=>상관여부나 그룹핑할 개수 등을 파악하고자 할 때 먼저 그려보면 효과적입니다.
=>scatter 라는 메소드를 이용
=>colorbar 를 이용해서 산포도에 그려지는 데이터의 색상에 크기를 적용할 수 있습니다.

7.파이 그래프
=>전체에서의 기여도를 파악할 때 주로 이용
=>하나의 열을 가지고 작성
=>메소드이름은 pie
=>explode 옵션에 실수 리스트를 대입하면 중앙에서 대입한 숫자 만큼 떨어져서 그려짐, 0.0-1.0 사이
=>autopct 에 숫자 서식을 설정해서 백분율을 표시ㅗ할 수 있음 : '%1.1f%%' - 소수 첫째 자리까지의 백분율

8.box-plot 그래프
=>데이터의 분포를 확인할 때 사용하는 그래프
=>상자의 중앙선이 중간값 상자의 좌우가 25%, 75%에 해당하는 값
양끝선이 아래쪽 0.75% 정도 위끝선은 99.75% 정도에 해당하는 값
작은 원으로 표현되는 극단치(outlier)로 판단
=>중앙선과 양끝단의 선, 상자의 선을 보고 데이터의 분포를 예측
한쪽으로 치우치면 정규분포가 아닌 형태로 판정
=>boxplot()으로 그림

9.면적 그래프
=>선 그래프의 하단에 색상을 칠한 그래프
=>목적은 막대그래프와 유사
=>fill_between 이라는 메소드를 이용

**seaborn 패키지
=>matplotlib을 기반으로 해서 여러가지 테마와 통계형 차트가 추가된 패키지
=>numpy 나 pandas의 자료구조는 그대로 사용

1.regplot 이나 lmplot 이라는 함수를 이용해서 데이터의 분포와 1차 다항식 그래프를 같이 출력 가능
1차 다항식은 2개의 컬럼의 회귀식입니다.

2.단변량 데이터의 분포를 출력
=>히스토그램을 이용하는 경우가 많음 - 쉽다는 장점은 있지만 불연속하게 그려집니다.
=>히스토그램 대신에 커널밀도함수(kde)를 적용해서 연속적으로 그려서 파악하는 경우가 있음
=>seaborn 의 distplot 이라는 함수를 이용하면 커널 밀도 함수를 적용한 그래프와 히스토그램을 같이 출력할 수 있음

3.heatmap
=>크로스 테이블을 시각화할 때 주로 이용
=>2개 항목을 적용해서 분류한 후 데이터를 출력하는 시각화
=>Dataframe에서 pivot 이라는 함수를 이용해서 2개로 분류하고 계산할 항목과 함수를 지정(함수는 생략하면 합계)
=>heatmap 함수에 데이터를 대입하면 시각화됩니다.

4.violinplot
=>boxplot은 데이터 값들의 상한과 하한, 4분위 수 등을 파악
=>vitolinplot은 사각형 대신에 커널밀도함수를 적용해서 데이터 개수도 어느 정도 파악이 가능

5.데이터 개수 출력
=>stripplot, swarmplot() 등이 제공

6.막대 그래프 - barplot

7.히스토그램 - countplot

8.데이터프레임의 모든 컬럼의 상관관계를 출력 - pairplot

9.상관관계를 출력하고 히스토그램까지 출력 - jointplot

**folium
=>지도나 단계구분도를 위한 시각화 패키지
=>자바스크립트 기반으로 interactive(동적으로 변화) 하게 시각화
=>기본 패키지가 아니라서 설치를 해야 함
=>jupyter-notebook 이 크롬에서 실행 중이라면 바로 출력 가능
다른 IDE를 사용하는 경우에는 save('파일 경로.html')로 저장한 후 브라우저에서 확인
IE에서는 자바스크립트 문제로 출력되지 않음

=>단계구분도를 만들 때는 각 지역의 경계에 대한 json 데이터가 존재해야 합니다.
한국 데이터는 southkorea-maps 에서 확인 가능

1.지도 생성
folium.Map(locations=[위도, 경도], zoom_start=확대축소배율)

2.마커 생성
folium.Marker(locations=[위도, 경도], popup=출력될 문자열, icon=이미지).add_to(지도객체)

3.출력
- 주피터 노트북 : 지도객체
- 다른 IDE : 지도객체.save('파일경로')

















